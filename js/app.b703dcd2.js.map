{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/services/config.js","webpack:///./src/services/state.js","webpack:///./src/game-objects/_game-object.js","webpack:///./src/game-objects/rocket.js","webpack:///./src/game-objects/control.js","webpack:///./src/game-objects/background.js","webpack:///./src/game-objects/wall.js","webpack:///./src/game-objects/gui.js","webpack:///./src/services/scene.js","webpack:///./src/services/controls.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GAME_CONFIG","GAME_WIDTH","GAME_HEIGHT","SCALE","SPEED_SCALE","BACKGROUND_HEIGHT","MIN_POWER","MAX_POWER","MIN_ANGLE","MAX_ANGLE","G","IMPULSE_LOSS_RATIO","CAMERA_PADDING","WALL_HEIGHT","WALL_WIDTH","HUD_X","HUD_Y","initialState","canvas","isPlaying","isFalling","isGameOver","gameSpeed","angle","power","pauseAngle","pausePower","y0","x0","wallX","initialCameraX","cameraX","resetState","assign","state","props","this","x","y","ctx","rotation","isMousePressed","e","canvasBoundingRectangle","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","rad","_degToRad","Math","round","cos","sin","_getMouseCoords","topLeft","_getRotatedCoordinates","topRight","width","bottomLeft","height","bottomRight","k1","m1","n1","k2","n2","isMouseOverElement","PI","y_floor","super","rocketImageReady","rocketIdleImageReady","rocket","Image","rocketIdle","onload","src","control","scene","find","wall","maxY","center","addEventListener","_onMouseDown","window","_onMouseUp","onMouseMove","isMouseOver","style","cursor","h","delta","rads","x1","y1","_radToDeg","atan","Lmax","gameOver","translate","rotate","dispatchEvent","CustomEvent","move","cameraMove","fall","checkWallCollision","drawImage","setTransform","imageReady","image","controlWidth","abs","sqrt","moveToRocket","clouds1","clouds2","sky","rocks","floor","createImage","url","speed","asset","img","ready","nearClouds","farClouds","isSecond","getX","drawSky","drawFarClouds","drawRocks","drawNearClouds","drawFloor","lineHeight","color","keyFont","valueFont","keyPadding","valuePadding","text","line","font","fillText","fillStyle","textAlign","drawKey","drawValue","structure","className","properties","el","gameObject","map","obj","getContext","render","UI","playPause","document","querySelector","playAgain","speed1","speed2","speed3","speedContainer","resetControls","querySelectorAll","disabled","context","oldAngle","oldPower","reset","clear","initialize","target","nodeName","id","split","oldTimeStamp","init","getElementById","setAttribute","String","requestAnimationFrame","gameLoop","timeStamp","clearRect"],"mappings":"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","file":"js/app.b703dcd2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dev-challenge-xvii-online/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const GAME_CONFIG = {\n  GAME_WIDTH: 1000,\n  GAME_HEIGHT: 600,\n  SCALE: 2,\n  SPEED_SCALE: 1.5,\n  BACKGROUND_HEIGHT: 50,\n  MIN_POWER: 200,\n  MAX_POWER: 400,\n  MIN_ANGLE: -10,\n  MAX_ANGLE: -69,\n  G: 9.81,\n  /**\n   * The coefficient by which the rocket's flight power will decrease with each impact on the floor.\n   */\n  IMPULSE_LOSS_RATIO: 0.75,\n  /**\n   * The minimum distance to the edge of the playing area that the rocket may approach before the camera shift is activated.\n   */\n  CAMERA_PADDING: 500\n};\n\nGAME_CONFIG.WALL_HEIGHT = GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT - 150;\nGAME_CONFIG.WALL_WIDTH = 150;\nGAME_CONFIG.HUD_X = GAME_CONFIG.GAME_WIDTH;\nGAME_CONFIG.HUD_Y = 0;\n\nexport {GAME_CONFIG};\n","import {GAME_CONFIG} from \"./config\";\n\n/**\n * Creates the game state and some of the initial values for the game objects.\n *\n * @type {{canvas: null, isPlaying: boolean, isGameOver: boolean, gameSpeed: number, wallX: number, y0: number, x0: number, angle: number, isFalling: boolean, initialCameraX: number, power: number, cameraX: number}}\n */\nconst initialState = {\n  canvas: null,\n\n  isPlaying: false,\n  isFalling: false,\n  isGameOver: false,\n  gameSpeed: 2,\n  /**\n   * The angle at which the rocket will be launched.\n   */\n  angle: 45,\n  /**\n   * The initial power of the rocket (and width of the control vector).\n   */\n  power: 150,\n  /**\n   * Values of angle and power for play/pause action,\n   */\n  pauseAngle: 0,\n  pausePower: 0,\n  /**\n   * Initial coordinates and power of the rocket (and control vector, with a shift)\n   */\n  y0: GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT - 150,\n  x0: 75,\n  /**\n   * Position of the wall.\n   */\n  wallX: 2600,\n  /**\n   * Camera coordinates.\n   */\n  initialCameraX: GAME_CONFIG.CAMERA_PADDING,\n  cameraX: 0\n};\n\nexport const resetState = () => {\n  Object.assign(state, {\n    ...initialState,\n    canvas: state.canvas\n  });\n};\n\nexport const state = {...initialState};\n","import {state} from \"../services/state\";\n\n/**\n * Main class for each gameObjects, encapsulates mouse methods, coordinates and rotation methods.\n */\nexport class GameObject {\n  constructor(props) {\n    this.x = props.x || 0;\n    this.y = props.y || 0;\n    this.ctx = props.ctx;\n    this.rotation = 0;\n\n    this.isMousePressed = false;\n  }\n\n  /**\n   * Returns mouse coordinates.\n   *\n   * @param {MouseEvent} e Mouse event.\n   * @return {{x: number, y: number}} Mouse coordinates.\n   */\n  _getMouseCoords(e) {\n    const canvasBoundingRectangle = state.canvas.getBoundingClientRect();\n    const mouseX = e.clientX - canvasBoundingRectangle.left;\n    const mouseY = e.clientY - canvasBoundingRectangle.top;\n    return {\n      x: mouseX,\n      y: mouseY\n    }\n  }\n\n  /**\n   * Returns the coordinates of a point that has been rotated at a certain angle around a certain point.\n   *\n   * @param {number} x0 The X coordinate of the point around which the rotation is performed.\n   * @param {number} y0 the Y coordinate of the point around which the rotation is performed.\n   * @param {number} x The X coordinate of the point that is rotated.\n   * @param {number} y The Y coordinate of the point that is rotated.\n   * @param {number} angle Angle of rotation in degrees. In the absence of the parameter, the rotation is carried out on the angle of the\n   * element in the context of which the function is called.\n   *\n   * @return {{x: number, y: number}} Coordinates of the point after turning.\n   */\n  _getRotatedCoordinates(x0, y0, x, y, angle = undefined) {\n    const rad = this._degToRad(Math.round(angle ? angle : this.rotation));\n    return {\n      x: Math.round(x0 + (x - x0) * Math.cos(rad) - (y - y0) * Math.sin(rad)),\n      y: Math.round(y0 + (y - y0) * Math.cos(rad) + (x - x0) * Math.sin(rad))\n    };\n  }\n\n  /**\n   * Checks if the mouse cursor is over an element. For a rectangular element (and in this game all elements are\n   * rectangular), two triangles are created and the point is checked for occurrence using a vector method.\n   *\n   * @param {MouseEvent} e Mouse event.\n   * @param {number=} x0 The X coordinate of the point around which the rotation of the element is performed.\n   * @param {number=} y0 the Y coordinate of the point around which the rotation of the element is performed.\n   *\n   * @return {boolean} If the mouse cursor is over an element.\n   */\n  isMouseOverElement(e, x0, y0) {\n    const mouseX = this._getMouseCoords(e).x;\n    const mouseY = this._getMouseCoords(e).y;\n\n    const topLeft = this._getRotatedCoordinates(x0, y0, this.x, this.y);\n    const topRight = this._getRotatedCoordinates(x0, y0, this.x + this.width, this.y);\n    const bottomLeft = this._getRotatedCoordinates(x0, y0, this.x, this.y + this.height);\n    const bottomRight = this._getRotatedCoordinates(x0, y0, this.x + this.width, this.y + this.height);\n\n    const k1 = (topLeft.x - mouseX) * (bottomLeft.y - topLeft.y) - (bottomLeft.x - topLeft.x) * (topLeft.y - mouseY);\n    const m1 = (bottomLeft.x - mouseX) * (topRight.y - bottomLeft.y) - (topRight.x - bottomLeft.x) * (bottomLeft.y - mouseY);\n    const n1 = (topRight.x - mouseX) * (topLeft.y - topRight.y) - (topLeft.x - topRight.x) * (topRight.y - mouseY);\n\n    const k2 = (bottomRight.x - mouseX) * (bottomLeft.y - bottomRight.y) - (bottomLeft.x - bottomRight.x) * (bottomRight.y - mouseY);\n    const n2 = (topRight.x - mouseX) * (bottomRight.y - topRight.y) - (bottomRight.x - topRight.x) * (topRight.y - mouseY);\n\n    return ((k1 <= 0 && m1 <= 0 && n1 <= 0) || (k1 >= 0 && m1 >= 0 && n1 >= 0)) ||\n      ((k2 <= 0 && m1 <= 0 && n2 <= 0) || (k2 >= 0 && m1 >= 0 && n2 >= 0));\n  }\n\n  /**\n   * If the mouse cursor is above an element, activate the corresponding flag.\n   *\n   * @param {MouseEvent} e Mouse event.\n   */\n  _onMouseDown(e) {\n    if (this.isMouseOverElement(e)) {\n      this.isMousePressed = true;\n    }\n  }\n\n  /**\n   * Converts radians into degrees.\n   *\n   * @param {number} angle Angle in radians.\n   * @return {number} Angle in degrees.\n   */\n  _radToDeg(angle) {\n    return angle * 180 / Math.PI;\n  }\n\n  /**\n   * Converts degrees into radians.\n   *\n   * @param {number} angle Angle in degrees.\n   * @return {number} Angle in radians.\n   */\n  _degToRad(angle) {\n    return angle * Math.PI / 180;\n  }\n\n  /**\n   * Deactivate the corresponding flag if the mouse button releases.\n   */\n  _onMouseUp() {\n    this.isMousePressed = false;\n  }\n}\n","import {GameObject} from \"./_game-object\";\nimport {scene} from \"../services/scene\";\nimport {GAME_CONFIG} from \"../services/config\";\nimport {state} from \"../services/state\";\n\n/**\n * The constant that defines a \"floor\" coordinate.\n * @type {number}\n */\nconst y_floor = GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT;\n\n/**\n * The class responsible for the behavior of the main object of the game, at the moment, is a rocket.\n *\n * @extends GameObject\n */\nexport class Rocket extends GameObject {\n  constructor(x, y) {\n    super(x, y);\n    this.rocketImageReady = false;\n    this.rocketIdleImageReady = false;\n    this.rocket = new Image();\n    this.rocketIdle = new Image();\n    this.rocket.onload = () => {\n      this.rocketImageReady = true;\n    };\n    this.rocketIdle.onload = () => {\n      this.rocketIdleImageReady = true;\n    };\n    this.rocket.src = './images/rocket.png';\n    this.rocketIdle.src = './images/rocket_idle.png';\n\n    this.x0 = state.x0;\n    this.y0 = state.y0;\n    this.t = 0;\n\n    this.rotation = -state.angle;\n\n    this.width = 150;\n    this.height = 150;\n\n    this.control = scene.find('control');\n    this.wall = scene.find('wall');\n\n    this.maxY = this.center.y;\n\n    state.canvas.addEventListener('mousedown', this._onMouseDown.bind(this));\n    window.addEventListener('mouseup', this._onMouseUp.bind(this));\n    window.addEventListener('mousemove', this.onMouseMove.bind(this));\n  }\n\n  /**\n   * Returns the coordinates of the rocket center taking into account the rotation and shift.\n   *\n   * @return {{x: number, y: number}} Coordinates of the rocket center\n   */\n  get center() {\n    const x0 = this.x + this.width / 2;\n    const y0 = this.y;\n\n    /*\n     * It is necessary to \"turn\" the rocket before the calculations to match the view, as it will be rendered turned.\n     */\n    this.rotation += 90;\n    const center = this._getRotatedCoordinates(x0, y0, this.x + this.width / 2, this.y + this.height / 2, this.rotation);\n    this.rotation -= 90;\n    return center;\n  }\n\n  /**\n   * Checks if the mouse cursor is over an element.\n   *\n   * @param {MouseEvent} e Mouse event.\n   * @param {number=} x0 The X coordinate of the point around which the rotation of the element is performed.\n   * @param {number=} y0 the Y coordinate of the point around which the rotation of the element is performed.\n   *\n   * @return {boolean} If the mouse cursor is over an element.\n   */\n  isMouseOverElement(e, x0 = this.x + this.width / 2, y0 = this.y) {\n    this.rotation += 90;\n    const isMouseOver = super.isMouseOverElement(e, x0, y0);\n    this.rotation -= 90;\n    return isMouseOver;\n  }\n\n  /**\n   * Allows to change the initial height of the rocket by drag and drop.\n   *\n   * @param {MouseEvent} e Mouse event.\n   */\n  onMouseMove(e) {\n    if (this.isMouseOverElement(e)) {\n      state.canvas.style.cursor = 'pointer';\n    } else {\n      state.canvas.style.cursor = 'default';\n    }\n\n    if (this.isMousePressed && !state.isPlaying) {\n      const h = this._getMouseCoords(e).y - this.height / 2;\n      if (h > (GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT - this.height / 2) || h < 200) {\n        return;\n      }\n      this.y0 = this._getMouseCoords(e).y - this.height / 2;\n      this.y = this.y0;\n    }\n  }\n\n  /**\n   * Replaces the current coordinates in the formula for the movement of the body thrown at an angle to the horizon.\n   */\n  reset() {\n    this.x0 = this.x;\n    this.y0 = this.y;\n    this.t = 0;\n  }\n\n  /**\n   * Calculates new coordinates for the rocket using a standard physics formula.\n   * Calculates the rotation angle based on the old and new coordinates.\n   * Calculates the maximum flight altitude during the whole game and the maximum range for the current parabola.\n   * Determines whether the rocket has fallen to the floor level and launches again at a reflected angle\n   * with a changed force level (loss of kinetic energy)\n   *\n   * @param {number} delta Value to change the time coordinate.\n   */\n  move(delta) {\n    let rads = this._degToRad(state.angle);\n\n    const x1 = this.x0 + state.power * Math.cos(rads) * this.t * (1 / GAME_CONFIG.SCALE);\n    const y1 = this.y0 - (state.power * Math.sin(rads) * this.t - GAME_CONFIG.G * this.t * this.t / 2) * (1 / GAME_CONFIG.SCALE);\n\n    this.rotation = this._radToDeg(Math.atan((y1 - this.y) / (x1 - this.x)));\n    this.x = x1;\n    this.y = y1;\n\n    if (state.isPlaying) {\n      this.t += delta * GAME_CONFIG.SCALE;\n    }\n\n    const Lmax = state.power * state.power * Math.sin(2 * rads) / GAME_CONFIG.G;\n\n    if (this.Lmax !== Lmax) {\n      this.Lmax = Lmax;\n      if (this.Lmax < this.width) {\n        this.gameOver();\n        return;\n      }\n    }\n\n    if (this.center.y < this.maxY) {\n      this.maxY = this.center.y;\n    }\n\n    if (this.center.y + this.height / 3 > y_floor) {\n      this.y0 = y_floor - this.height;\n      this.x0 = this.x;\n      this.t = 0;\n      state.power *= GAME_CONFIG.IMPULSE_LOSS_RATIO;\n    }\n\n  }\n\n  /**\n   * Simple dropping down in a collision with a wall. When falling to the floor stops the animation.\n   *\n   * @param {number} delta Value to change the time coordinate.\n   */\n  fall(delta) {\n    let rads = this._degToRad(state.angle);\n    this.y = this.y0 - (state.power * Math.sin(rads) * this.t - GAME_CONFIG.G * this.t * this.t / 2) * (1 / GAME_CONFIG.SCALE);\n    this.t += delta * GAME_CONFIG.SCALE;\n\n    if (this.center.y + this.height / 4 > y_floor) {\n      state.gameSpeed = 0;\n    }\n\n  }\n\n  /**\n   * Determines the point of canvas shift and rotate the rocket to the specified angle.\n   */\n  rotate() {\n    if (!this.rotation) {\n      return;\n    }\n    this.ctx.translate(this.x - state.cameraX + this.width / 2, this.y);\n    this.ctx.rotate(this._degToRad(this.rotation + 90));\n    this.ctx.translate(-this.x + state.cameraX - this.width / 2, -this.y);\n  }\n\n  /**\n   * It checks if a collision with a wall has occurred and starts the end of the game procedure, if any.\n   */\n  checkWallCollision() {\n    if ((this.center.x + this.width / 4) >= this.wall.x &&\n      ((this.center.x - this.width / 4)) <= this.wall.x + this.wall.width &&\n      this.center.y >= GAME_CONFIG.GAME_HEIGHT - this.wall.height) {\n      this.gameOver();\n    }\n  }\n\n  /**\n   * Moves the camera if the rocket came close enough to the end of the playing field.\n   */\n  cameraMove() {\n    if (this.x > state.canvas.width - GAME_CONFIG.CAMERA_PADDING) {\n      state.cameraX = this.x - state.canvas.width + GAME_CONFIG.CAMERA_PADDING;\n    } else {\n      state.cameraX = 0;\n    }\n  }\n\n  /**\n   * Finishes the game by changing the values in the application state and sends events to change the state of\n   * the control buttons.\n   */\n  gameOver() {\n    state.isPlaying = false;\n    state.isFalling = true;\n    state.isGameOver = true;\n    window.dispatchEvent(new CustomEvent('gameover'));\n  }\n\n  /**\n   * Renders the rocket.\n   *\n   * @param {number} delta Value to change the time coordinate.\n   */\n  render(delta) {\n    if (!this.rocketIdleImageReady || !this.rocketImageReady) {\n      return;\n    }\n\n    if (!this.control) {\n      this.control = scene.find('control');\n    }\n\n    // if (this.rotation !== state.angle) {\n    //   this.rotation = -state.angle;\n    // }\n\n    if (state.isPlaying) {\n      this.move(delta);\n      this.cameraMove();\n    } else if (state.isFalling) {\n      this.fall(delta);\n    } else {\n      //this.rotation = this.rotation ? this.rotation : -state.angle;\n    }\n\n    this.checkWallCollision();\n    this.rotate();\n\n    if (state.isPlaying) {\n      this.ctx.drawImage(this.rocket, this.x - state.cameraX, this.y, 150, 150);\n    } else {\n      this.ctx.drawImage(this.rocketIdle, this.x - state.cameraX, this.y, 150, 150);\n    }\n\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n}\n","import {GameObject} from \"./_game-object\";\nimport {state} from \"../services/state\";\nimport {scene} from \"../services/scene\";\nimport {GAME_CONFIG} from \"../services/config\";\n\n/**\n * The class responsible for the work of the arrow that controls the motion vector of the main object of the game.\n *\n * @extends GameObject\n */\nexport class Control extends GameObject {\n  constructor(x, y) {\n    super(x, y);\n    this.imageReady = false;\n    this.image = new Image();\n    this.image.onload = () => this.imageReady = true;\n    this.image.src = './images/arrow.png';\n\n    this.rotation = -state.angle;\n    this.width = state.power;\n    this.height = state.power;\n\n    this.rocket = scene.find('rocket');\n\n    state.canvas.addEventListener('mousedown', this._onMouseDown.bind(this));\n    state.canvas.addEventListener('mouseup', this._onMouseUp.bind(this));\n    state.canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\n  }\n\n  /**\n   * Defines the point around which the element rotates and calls the parent class method.\n   *\n   * @param {MouseEvent} e Mouse event.\n   * @return {boolean} If the mouse cursor is over an element.\n   */\n  isMouseOverElement(e) {\n    const x0 = this.x;\n    const y0 = this.y + this.height / 2;\n    return super.isMouseOverElement(e, x0, y0);\n  }\n\n  /**\n   * A method responsible for changing the initial power and angle of flight of the main object of the game.\n   *\n   * @param {MouseEvent} e Mouse event.\n   */\n  onMouseMove(e) {\n    if (this.isMouseOverElement(e)) {\n      state.canvas.style.cursor = 'pointer';\n    } else {\n      state.canvas.style.cursor = 'default';\n    }\n\n    if (this.isMousePressed && !state.isPlaying) {\n\n      /*\n       * The block responsible for preventing the motion vector from sending the object down or back.\n       */\n      let mouseX = this._getMouseCoords(e).x - this.x;\n      let mouseY = this._getMouseCoords(e).y - this.y - this.height / 2;\n\n      if (mouseX < 0 || mouseY > 0) {\n        return;\n      }\n\n      /*\n       * Initial flight power is equal to the visible width of the vector and is limited at the bottom and top.\n       */\n      const controlWidth = Math.abs(Math.sqrt(mouseX * mouseX + mouseY * mouseY));\n\n      if (controlWidth > GAME_CONFIG.MIN_POWER && controlWidth < GAME_CONFIG.MAX_POWER) {\n        const power = Math.round(controlWidth);\n        this.width = power;\n        state.power = power;\n      }\n\n      /*\n       * The initial flight angle is equal to the tilt angle of the vector.\n       */\n      const rotation = Math.round(this._radToDeg(Math.atan(mouseY / Math.abs(mouseX))));\n\n      if (rotation < GAME_CONFIG.MAX_ANGLE) {\n        this.rotation = GAME_CONFIG.MAX_ANGLE;\n      } else if (rotation > GAME_CONFIG.MIN_ANGLE) {\n        this.rotation = GAME_CONFIG.MIN_ANGLE;\n      } else {\n        this.rotation = rotation;\n      }\n\n      state.angle = Math.abs(this.rotation);\n    }\n  }\n\n  /**\n   * Determines the point of canvas shift and rotate the vector to the specified angle.\n   */\n  rotate() {\n    if (this.rotation < GAME_CONFIG.MAX_ANGLE) {\n      return;\n    }\n    if (this.rotation > GAME_CONFIG.MIN_ANGLE) {\n      return;\n    }\n\n    this.ctx.translate(this.x, this.y + this.height / 2);\n    this.ctx.rotate(this.rotation ? this._degToRad(this.rotation) : 0);\n    this.ctx.translate(-this.x, -this.y - this.height / 2);\n  }\n\n  /**\n   * Moves the control vector to the point where the main object of the game is located.\n   */\n  moveToRocket() {\n    this.x = this.rocket.x - state.cameraX + 10 + this.height / 2;\n    this.y = this.rocket.y - this.height / 2;\n  }\n\n  /**\n   * Returns the vector width to the value defined in the application state.\n   */\n  reset() {\n    this.width = state.power;\n  }\n\n  /**\n   * Draws a control vector with a certain angle near the main object of the game.\n   */\n  render() {\n    if (!this.imageReady) {\n      return;\n    }\n\n    if (state.isPlaying || state.isGameOver) {\n      return;\n    }\n\n    this.moveToRocket();\n    this.rotate();\n\n    this.ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n}\n","import {GameObject} from \"./_game-object\";\nimport {state} from \"../services/state\";\n\nconst clouds1 = './images/background/clouds_1.png';\nconst clouds2 = './images/background/clouds_2.png';\nconst sky = './images/background/sky.png';\nconst rocks = './images/background/rocks.png';\nconst floor = './images/floor.png';\n\n/**\n * A background element with Image and speed.\n * @typedef {Object<HTMLImageElement, number>} BackgroundElement\n * @property {HTMLImageElement} img Background element.\n * @property {number} speed The speed at which the object moves relative to the camera.\n * @property {boolean} ready Whether the image is loaded.\n */\n\n/**\n * Creates an Image element.\n *\n * @param {string} url Image url.\n * @param {number} speed Element speed.\n * @return {BackgroundElement} Background element.\n */\nfunction createImage(url, speed = 1) {\n  const image = new Image();\n  const asset = {\n    img: image,\n    speed,\n    ready: false\n  };\n  image.src = url;\n  image.onload = () => {\n    asset.ready = true;\n  };\n  return asset;\n}\n\n\n/**\n * A class that is responsible for creating and displaying the parallax background.\n *\n * @extends GameObject\n */\nexport class Background extends GameObject {\n  constructor(props) {\n    super(props);\n\n    /**\n     * @property {BackgroundElement} sky Main background element, should run slowly.\n     */\n    this.sky = createImage(sky, 0.5);\n\n    /**\n     * @property {BackgroundElement} nearClouds The closest background element, should run very fast.\n     */\n    this.nearClouds = createImage(clouds1, 1.5);\n\n    /**\n     * @property {BackgroundElement} farClouds Medium background element, should run close to the camera speed.\n     */\n    this.farClouds = createImage(clouds2, 1.1);\n\n    /**\n     * @property {BackgroundElement} rocks Medium background element, should run close to the camera speed.\n     */\n    this.rocks = createImage(rocks, 1.3);\n\n    /**\n     * @property {BackgroundElement} rocks Scene floor, should run with the camera speed.\n     */\n    this.floor = createImage(floor);\n  }\n\n  /**\n   * Returns the X coordinate, where the background element should be at the moment, depending on the camera position\n   * and the specified speed of the element.\n   *\n   * @param {BackgroundElement} asset Background element.\n   * @param {boolean} isSecond There must be two images so that one can be replaced by the other while the first one\n   * goes out of the camera. If the second image is drawn in the current cycle, it should be one canvas width to the right.\n   *\n   * @return {number} THe X coordinate.\n   */\n  getX(asset, isSecond = false) {\n    return (((-state.cameraX * asset.speed) % this.ctx.canvas.width) + (isSecond ? this.ctx.canvas.width : 0));\n  }\n\n  /**\n   * Draws the floor.\n   */\n  drawFloor() {\n    if (!this.floor.ready) {\n      return;\n    }\n    this.ctx.drawImage(this.floor.img, this.getX(this.floor), 550, this.ctx.canvas.width, 50);\n    this.ctx.drawImage(this.floor.img, this.getX(this.floor, true), 550, this.ctx.canvas.width, 50);\n  }\n\n  /**\n   * Draws the sky.\n   */\n  drawSky() {\n    if (!this.sky.ready) {\n      return;\n    }\n    this.ctx.drawImage(this.sky.img, this.getX(this.sky), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.drawImage(this.sky.img, this.getX(this.sky, true), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  /**\n   * Draws far clouds.\n   */\n  drawFarClouds() {\n    if (!this.farClouds.ready) {\n      return;\n    }\n    this.ctx.drawImage(this.farClouds.img, this.getX(this.farClouds), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.drawImage(this.farClouds.img, this.getX(this.farClouds, true), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  /**\n   * Draws near clouds.\n   */\n  drawNearClouds() {\n    if (!this.nearClouds.ready) {\n      return;\n    }\n    this.ctx.drawImage(this.nearClouds.img, this.getX(this.nearClouds), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.drawImage(this.nearClouds.img, this.getX(this.nearClouds, true), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  /**\n   * Draws the rocks.\n   */\n  drawRocks() {\n    if (!this.rocks.ready) {\n      return;\n    }\n    this.ctx.drawImage(this.rocks.img, this.getX(this.rocks), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.drawImage(this.rocks.img, this.getX(this.rocks, true), this.y, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  /**\n   * Draws all elements of the background one by one.\n   */\n  render() {\n    this.drawSky();\n    this.drawFarClouds();\n    this.drawRocks();\n    this.drawNearClouds();\n    this.drawFloor();\n  }\n}\n","import {GameObject} from \"./_game-object\";\nimport {state} from \"../services/state\";\nimport {GAME_CONFIG} from \"../services/config\";\n\n/**\n * The class responsible only for drawing the wall.\n * All control is in the Rocket class.\n *\n * @extends GameObject\n */\nexport class Wall extends GameObject {\n  constructor(x, y) {\n    super(x, y);\n    this.imageReady = false;\n    this.image = new Image();\n    this.height = GAME_CONFIG.WALL_HEIGHT;\n    this.width = GAME_CONFIG.WALL_WIDTH;\n    this.image.onload = () => {\n      this.imageReady = true;\n    };\n    this.image.src = './images/wall.png';\n  }\n\n  /**\n   * Draws the wall.\n   */\n  render() {\n    if (!this.imageReady) {\n      return;\n    }\n    this.ctx.drawImage(this.image, this.x - state.cameraX, this.y, this.width, this.height);\n  }\n}\n","import {GameObject} from \"./_game-object\";\nimport {GAME_CONFIG} from \"../services/config\";\nimport {state} from \"../services/state\";\nimport {scene} from \"../services/scene\";\n\n/**\n * The class responsible for drawing the service information about the game process.\n *\n * @extends GameObject\n */\nexport class Gui extends GameObject {\n  constructor(x, y) {\n    super(x, y);\n\n    this.width = 200;\n    this.height = 200;\n\n    this.image = new Image();\n    this.image.onload = () => {\n      this.imageReady = true;\n    };\n    this.image.src = './images/gui.png';\n\n    this.lineHeight = 30;\n    this.color = 'white';\n    this.keyFont = '15px Arial';\n    this.valueFont = '22px Arial';\n\n    this.keyPadding = 80;\n    this.valuePadding = 10;\n\n    this.rocket = null;\n  }\n\n  /**\n   * Draws the parameter name on certain line.\n   *\n   * @param {string} text Parameter name.\n   * @param {number} line Line.\n   */\n  drawKey(text, line) {\n    this.ctx.font = this.keyFont;\n    this.ctx.fillText(text, this.x - this.keyPadding, this.y + line * this.lineHeight);\n  }\n\n  /**\n   * Draws the parameter value on certain line.\n   *\n   * @param {string} text Parameter value.\n   * @param {number} line Line.\n   */\n  drawValue(text, line) {\n    this.ctx.font = this.valueFont;\n    this.ctx.fillText(text, this.x - this.valuePadding, this.y + line * this.lineHeight);\n  }\n\n  /**\n   * Defines the main object of the game, draws service information.\n   */\n  render() {\n    if (!this.rocket) {\n      this.rocket = scene.find('rocket');\n    }\n\n    if (!this.imageReady) {\n      return;\n    }\n\n    this.ctx.drawImage(this.image, this.x - this.width, this.y, this.width, this.height);\n\n    this.ctx.fillStyle = this.color;\n    this.ctx.textAlign = \"right\";\n\n    this.drawKey('Current distance', 1);\n    this.drawValue(Math.round(this.rocket.x), 1);\n\n    this.drawKey('Current altitude', 2);\n    this.drawValue(Math.round(GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT - this.rocket.center.y), 2);\n\n    this.drawKey('Max altitude', 3);\n    this.drawValue(Math.round(GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.BACKGROUND_HEIGHT - this.rocket.maxY), 3);\n\n    this.drawKey('Angle', 4);\n    this.drawValue(Math.round(state.angle), 4);\n\n    this.drawKey('Power', 5);\n    this.drawValue(Math.round(state.power), 5);\n\n    this.drawKey('Time from launch', 6);\n    this.drawValue(Math.round(this.rocket.t || 0), 6);\n  }\n}\n","import {Rocket} from \"../game-objects/rocket\";\nimport {Control} from \"../game-objects/control\";\nimport {Background} from \"../game-objects/background\";\nimport {Wall} from \"../game-objects/wall\";\nimport {state} from \"./state\";\nimport {Gui} from \"../game-objects/gui\";\nimport {GAME_CONFIG} from \"./config\";\n\n/**\n * A scene that contains all game objects, their initial coordinates and some methods for interaction and drawing.\n * A singleton.\n */\nclass Scene {\n  constructor() {\n\n    this.structure = [\n      {\n        name: 'background',\n        className: Background,\n        properties: {\n          x: 0,\n          y: 0\n        }\n      },\n      {\n        name: 'wall',\n        className: Wall,\n        properties: {\n          x: state.wallX,\n          y: GAME_CONFIG.GAME_HEIGHT - GAME_CONFIG.WALL_HEIGHT\n        }\n      },\n      {\n        name: 'rocket',\n        className: Rocket,\n        properties: {\n          x: state.x0,\n          y: state.y0\n        }\n      },\n      {\n        name: 'control',\n        className: Control,\n        properties: {\n          x: state.x0,\n          y: state.y0\n        }\n      },\n      {\n        name: 'hud',\n        className: Gui,\n        properties: {\n          x: GAME_CONFIG.HUD_X,\n          y: GAME_CONFIG.HUD_Y\n        }\n      }\n    ]\n  }\n\n  /**\n   *\n   * @param {string} name GameObject name.\n   */\n  find(name) {\n    return this.structure.find((el) => el.name === name).gameObject;\n  }\n\n  /**\n   * Initializes the scene and creates instances of all game objects.\n   */\n  initialize() {\n    this.structure.map((obj) => {\n      obj.gameObject = new obj.className({\n        ...obj.properties,\n        ctx: state.canvas.getContext('2d')\n      })\n    });\n  }\n\n  /**\n   * Clears the scene.\n   */\n  clear() {\n    this.structure.map((obj) => {\n      delete obj.gameObject;\n    });\n  }\n\n  /**\n   * Renders the scene.\n   */\n  render(delta) {\n    this.structure.map((obj) => {\n      if (obj.gameObject) {\n        obj.gameObject.render(delta);\n      }\n    });\n  }\n\n}\n\nexport const scene = new Scene();\n","import {scene} from \"./scene\";\nimport {resetState, state} from \"./state\";\n\n/**\n Simplified \"controller\" for the game, responsible for the control buttons.\n */\n\n/**\n * UI elemetns.\n */\nconst UI = {\n  playPause: document.querySelector('#playPause'),\n  playAgain: document.querySelector('#playAgain'),\n  speed1: document.querySelector('#speed-1'),\n  speed2: document.querySelector('#speed-2'),\n  speed3: document.querySelector('#speed-3'),\n  speedContainer: document.querySelector('#speedContainer'),\n};\n\nUI.playPause.addEventListener('click',\n  /**\n   * Launches the motion animation, \"lifts\" the missile coordinates and control vector.\n   */\n  () => {\n    if (!state.isPlaying) {\n      state.isPlaying = true;\n      if (state.angle !== state.oldAngle || state.power !== state.oldPower) {\n        scene.find('rocket').reset();\n        scene.find('control').reset();\n      }\n    } else {\n      state.oldAngle = state.angle;\n      state.oldPower = state.power;\n      state.isPlaying = false;\n    }\n  });\n\n/**\n * Resets the controls buttons.\n */\nfunction resetControls() {\n  [...UI.speedContainer.querySelectorAll('button'), UI.playPause].map((el) => el.disabled = false);\n  UI.playAgain.disabled = true;\n  UI.speed2.disabled = true;\n}\n\nUI.playAgain.addEventListener('click',\n  /**\n   * Allows to play again.\n   * Refreshes the scene, returns the state of the game to its initial value.\n   */\n  () => {\n    scene.clear();\n    resetState();\n    scene.initialize();\n    resetControls();\n  });\n\nUI.speedContainer.addEventListener('click',\n  /**\n   * Allows to change the speed of the game.\n   * @param {MouseEvent} e Mouse event.\n   */\n  (e) => {\n    if (e.target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    [...UI.speedContainer.querySelectorAll('button')]\n      .map((el) => el.disabled = false);\n\n    e.target.disabled = true;\n    state.gameSpeed = +e.target.id.split('-')[1];\n  });\n\nwindow.addEventListener('gameover',\n  /**\n   * Turns off the controls when the game is over.\n   */\n  () => {\n    [...UI.speedContainer.querySelectorAll('button'), UI.playPause].map((el) => el.disabled = true);\n    UI.playAgain.disabled = false;\n  });\n","import {scene} from \"./services/scene\";\nimport {GAME_CONFIG} from \"./services/config\";\nimport './services/controls';\nimport {state} from \"./services/state\";\n\nlet canvas;\nlet context;\nlet delta = 0;\nlet oldTimeStamp = 0;\n\nwindow.onload = init;\n\n/**\n * Initializes initial application container.\n *\n * @return {undefined}\n */\nfunction init() {\n  canvas = document.getElementById('game');\n  context = canvas.getContext('2d');\n\n  canvas.setAttribute('width', String(GAME_CONFIG.GAME_WIDTH));\n  canvas.setAttribute('height', String(GAME_CONFIG.GAME_HEIGHT));\n\n  state.canvas = canvas;\n  scene.initialize(context);\n\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Count time to understand real FPS. Calls render function.\n *\n * @param timeStamp\n * @return {undefined}\n */\nfunction gameLoop(timeStamp) {\n  delta = (timeStamp - oldTimeStamp) / 1000;\n  oldTimeStamp = timeStamp;\n\n  render(delta);\n  requestAnimationFrame(gameLoop);\n}\n\n/**\n * Goes through the scene, clears canvas and renders each gameObject with predefined speed.\n *\n * @param delta\n * @return {undefined}\n */\nfunction render(delta) {\n  if (!context) {\n    return;\n  }\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  scene.render(delta * state.gameSpeed * GAME_CONFIG.SPEED_SCALE);\n}\n\nrequestAnimationFrame(gameLoop);\n"],"sourceRoot":""}